#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



public partial class VoygerDatabase : System.Data.Linq.DataContext
{

    private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();

    #region Extensibility Method Definitions
    partial void OnCreated( );
    partial void InsertLineItems( LineItems instance );
    partial void UpdateLineItems( LineItems instance );
    partial void DeleteLineItems( LineItems instance );
    partial void InsertVoyBill( VoyBill instance );
    partial void UpdateVoyBill( VoyBill instance );
    partial void DeleteVoyBill( VoyBill instance );
    partial void InsertVPaymentMode( VPaymentMode instance );
    partial void UpdateVPaymentMode( VPaymentMode instance );
    partial void DeleteVPaymentMode( VPaymentMode instance );
    #endregion

    public VoygerDatabase( string connection ) :
            base(connection, mappingSource)
    {
        OnCreated();
    }

    public VoygerDatabase( System.Data.IDbConnection connection ) :
            base(connection, mappingSource)
    {
        OnCreated();
    }

    public VoygerDatabase( string connection, System.Data.Linq.Mapping.MappingSource mappingSource ) :
            base(connection, mappingSource)
    {
        OnCreated();
    }

    public VoygerDatabase( System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource ) :
            base(connection, mappingSource)
    {
        OnCreated();
    }

    public System.Data.Linq.Table<LineItems> LineItems
    {
        get
        {
            return this.GetTable<LineItems>();
        }
    }

    public System.Data.Linq.Table<VoyBill> VoyBill
    {
        get
        {
            return this.GetTable<VoyBill>();
        }
    }

    public System.Data.Linq.Table<VPaymentMode> VPaymentMode
    {
        get
        {
            return this.GetTable<VPaymentMode>();
        }
    }
}

[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.LineItems")]
public partial class LineItems : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private int _ID;

    private int _VoyBillId;

    private string _LineType;

    private int _Serial;

    private string _ItemCode;

    private double _Qty;

    private double _Rate;

    private double _Value;

    private double _DiscountValue;

    private double _Amount;

    private string _Description;

    #region Extensibility Method Definitions
    partial void OnLoaded( );
    partial void OnValidate( System.Data.Linq.ChangeAction action );
    partial void OnCreated( );
    partial void OnIDChanging( int value );
    partial void OnIDChanged( );
    partial void OnVoyBillIdChanging( int value );
    partial void OnVoyBillIdChanged( );
    partial void OnLineTypeChanging( string value );
    partial void OnLineTypeChanged( );
    partial void OnSerialChanging( int value );
    partial void OnSerialChanged( );
    partial void OnItemCodeChanging( string value );
    partial void OnItemCodeChanged( );
    partial void OnQtyChanging( double value );
    partial void OnQtyChanged( );
    partial void OnRateChanging( double value );
    partial void OnRateChanged( );
    partial void OnValueChanging( double value );
    partial void OnValueChanged( );
    partial void OnDiscountValueChanging( double value );
    partial void OnDiscountValueChanged( );
    partial void OnAmountChanging( double value );
    partial void OnAmountChanged( );
    partial void OnDescriptionChanging( string value );
    partial void OnDescriptionChanged( );
    #endregion

    #region ForigenKey
    private EntityRef<VoyBill> _VoyBill;
    [Association(Storage = "_VoyBill", ThisKey = "VoyBillId")]
    public VoyBill VoyBill
    {
        get { return this._VoyBill.Entity; }
        set { this._VoyBill.Entity = value; }
    }
    public LineItems( )
    {
        this._VoyBill = new EntityRef<VoyBill>();
        OnCreated();
    }
    #endregion ForigenKey

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
    public int ID
    {
        get
        {
            return this._ID;
        }
        set
        {
            if ((this._ID != value))
            {
                this.OnIDChanging(value);
                this.SendPropertyChanging();
                this._ID = value;
                this.SendPropertyChanged("ID");
                this.OnIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoyBillId", DbType = "Int NOT NULL")]
    public int VoyBillId
    {
        get
        {
            return this._VoyBillId;
        }
        set
        {
            if ((this._VoyBillId != value))
            {
                this.OnVoyBillIdChanging(value);
                this.SendPropertyChanging();
                this._VoyBillId = value;
                this.SendPropertyChanged("VoyBillId");
                this.OnVoyBillIdChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_LineType", DbType = "NVarChar(4000)")]
    public string LineType
    {
        get
        {
            return this._LineType;
        }
        set
        {
            if ((this._LineType != value))
            {
                this.OnLineTypeChanging(value);
                this.SendPropertyChanging();
                this._LineType = value;
                this.SendPropertyChanged("LineType");
                this.OnLineTypeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Serial", DbType = "Int NOT NULL")]
    public int Serial
    {
        get
        {
            return this._Serial;
        }
        set
        {
            if ((this._Serial != value))
            {
                this.OnSerialChanging(value);
                this.SendPropertyChanging();
                this._Serial = value;
                this.SendPropertyChanged("Serial");
                this.OnSerialChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ItemCode", DbType = "NVarChar(4000)")]
    public string ItemCode
    {
        get
        {
            return this._ItemCode;
        }
        set
        {
            if ((this._ItemCode != value))
            {
                this.OnItemCodeChanging(value);
                this.SendPropertyChanging();
                this._ItemCode = value;
                this.SendPropertyChanged("ItemCode");
                this.OnItemCodeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Qty", DbType = "Float NOT NULL")]
    public double Qty
    {
        get
        {
            return this._Qty;
        }
        set
        {
            if ((this._Qty != value))
            {
                this.OnQtyChanging(value);
                this.SendPropertyChanging();
                this._Qty = value;
                this.SendPropertyChanged("Qty");
                this.OnQtyChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Rate", DbType = "Float NOT NULL")]
    public double Rate
    {
        get
        {
            return this._Rate;
        }
        set
        {
            if ((this._Rate != value))
            {
                this.OnRateChanging(value);
                this.SendPropertyChanging();
                this._Rate = value;
                this.SendPropertyChanged("Rate");
                this.OnRateChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Value", DbType = "Float NOT NULL")]
    public double Value
    {
        get
        {
            return this._Value;
        }
        set
        {
            if ((this._Value != value))
            {
                this.OnValueChanging(value);
                this.SendPropertyChanging();
                this._Value = value;
                this.SendPropertyChanged("Value");
                this.OnValueChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_DiscountValue", DbType = "Float NOT NULL")]
    public double DiscountValue
    {
        get
        {
            return this._DiscountValue;
        }
        set
        {
            if ((this._DiscountValue != value))
            {
                this.OnDiscountValueChanging(value);
                this.SendPropertyChanging();
                this._DiscountValue = value;
                this.SendPropertyChanged("DiscountValue");
                this.OnDiscountValueChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Amount", DbType = "Float NOT NULL")]
    public double Amount
    {
        get
        {
            return this._Amount;
        }
        set
        {
            if ((this._Amount != value))
            {
                this.OnAmountChanging(value);
                this.SendPropertyChanging();
                this._Amount = value;
                this.SendPropertyChanged("Amount");
                this.OnAmountChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Description", DbType = "NVarChar(4000)")]
    public string Description
    {
        get
        {
            return this._Description;
        }
        set
        {
            if ((this._Description != value))
            {
                this.OnDescriptionChanging(value);
                this.SendPropertyChanging();
                this._Description = value;
                this.SendPropertyChanged("Description");
                this.OnDescriptionChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging( )
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged( String propertyName )
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.VoyBill")]
public partial class VoyBill : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private int _ID;

    private string _BillType;

    private string _BillNumber;

    private System.Nullable<System.DateTime> _BillTime;

    private double _BillAmount;

    private double _BillGrossAmount;

    private double _BillDiscount;

    private string _CustomerName;

    private string _CustomerMobile;

    private string _StoreID;
    #region Forenkey
    private EntitySet<VPaymentMode> _VPaymentMode;
    private EntitySet<LineItems> _LineItems;
    public VoyBill( )
    {

        this._LineItems = new EntitySet<LineItems>();
        this._VPaymentMode = new EntitySet<VPaymentMode>();

        OnCreated();
    }

    [Association(Storage = "_LineItems", OtherKey = "ID")]
    public EntitySet<LineItems> LineItems
    {
        get { return this._LineItems; }
        set { this._LineItems.Assign(value); }
    }
    [Association(Storage = "_VPaymentMode", OtherKey = "ID")]
    public EntitySet<VPaymentMode> VPaymentMode
    {
        get { return this._VPaymentMode; }
        set { this._VPaymentMode.Assign(value); }
    }
    #endregion
    #region Extensibility Method Definitions
    partial void OnLoaded( );
    partial void OnValidate( System.Data.Linq.ChangeAction action );
    partial void OnCreated( );
    partial void OnIDChanging( int value );
    partial void OnIDChanged( );
    partial void OnBillTypeChanging( string value );
    partial void OnBillTypeChanged( );
    partial void OnBillNumberChanging( string value );
    partial void OnBillNumberChanged( );
    partial void OnBillTimeChanging( System.Nullable<System.DateTime> value );
    partial void OnBillTimeChanged( );
    partial void OnBillAmountChanging( double value );
    partial void OnBillAmountChanged( );
    partial void OnBillGrossAmountChanging( double value );
    partial void OnBillGrossAmountChanged( );
    partial void OnBillDiscountChanging( double value );
    partial void OnBillDiscountChanged( );
    partial void OnCustomerNameChanging( string value );
    partial void OnCustomerNameChanged( );
    partial void OnCustomerMobileChanging( string value );
    partial void OnCustomerMobileChanged( );
    partial void OnStoreIDChanging( string value );
    partial void OnStoreIDChanged( );
    #endregion

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
    public int ID
    {
        get
        {
            return this._ID;
        }
        set
        {
            if ((this._ID != value))
            {
                this.OnIDChanging(value);
                this.SendPropertyChanging();
                this._ID = value;
                this.SendPropertyChanged("ID");
                this.OnIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillType", DbType = "NVarChar(4000)")]
    public string BillType
    {
        get
        {
            return this._BillType;
        }
        set
        {
            if ((this._BillType != value))
            {
                this.OnBillTypeChanging(value);
                this.SendPropertyChanging();
                this._BillType = value;
                this.SendPropertyChanged("BillType");
                this.OnBillTypeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillNumber", DbType = "NVarChar(4000)")]
    public string BillNumber
    {
        get
        {
            return this._BillNumber;
        }
        set
        {
            if ((this._BillNumber != value))
            {
                this.OnBillNumberChanging(value);
                this.SendPropertyChanging();
                this._BillNumber = value;
                this.SendPropertyChanged("BillNumber");
                this.OnBillNumberChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillTime", DbType = "DateTime2(7)")]
    public System.Nullable<System.DateTime> BillTime
    {
        get
        {
            return this._BillTime;
        }
        set
        {
            if ((this._BillTime != value))
            {
                this.OnBillTimeChanging(value);
                this.SendPropertyChanging();
                this._BillTime = value;
                this.SendPropertyChanged("BillTime");
                this.OnBillTimeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillAmount", DbType = "Float NOT NULL")]
    public double BillAmount
    {
        get
        {
            return this._BillAmount;
        }
        set
        {
            if ((this._BillAmount != value))
            {
                this.OnBillAmountChanging(value);
                this.SendPropertyChanging();
                this._BillAmount = value;
                this.SendPropertyChanged("BillAmount");
                this.OnBillAmountChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillGrossAmount", DbType = "Float NOT NULL")]
    public double BillGrossAmount
    {
        get
        {
            return this._BillGrossAmount;
        }
        set
        {
            if ((this._BillGrossAmount != value))
            {
                this.OnBillGrossAmountChanging(value);
                this.SendPropertyChanging();
                this._BillGrossAmount = value;
                this.SendPropertyChanged("BillGrossAmount");
                this.OnBillGrossAmountChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_BillDiscount", DbType = "Float NOT NULL")]
    public double BillDiscount
    {
        get
        {
            return this._BillDiscount;
        }
        set
        {
            if ((this._BillDiscount != value))
            {
                this.OnBillDiscountChanging(value);
                this.SendPropertyChanging();
                this._BillDiscount = value;
                this.SendPropertyChanged("BillDiscount");
                this.OnBillDiscountChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustomerName", DbType = "NVarChar(4000)")]
    public string CustomerName
    {
        get
        {
            return this._CustomerName;
        }
        set
        {
            if ((this._CustomerName != value))
            {
                this.OnCustomerNameChanging(value);
                this.SendPropertyChanging();
                this._CustomerName = value;
                this.SendPropertyChanged("CustomerName");
                this.OnCustomerNameChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_CustomerMobile", DbType = "NVarChar(4000)")]
    public string CustomerMobile
    {
        get
        {
            return this._CustomerMobile;
        }
        set
        {
            if ((this._CustomerMobile != value))
            {
                this.OnCustomerMobileChanging(value);
                this.SendPropertyChanging();
                this._CustomerMobile = value;
                this.SendPropertyChanged("CustomerMobile");
                this.OnCustomerMobileChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_StoreID", DbType = "NVarChar(4000)")]
    public string StoreID
    {
        get
        {
            return this._StoreID;
        }
        set
        {
            if ((this._StoreID != value))
            {
                this.OnStoreIDChanging(value);
                this.SendPropertyChanging();
                this._StoreID = value;
                this.SendPropertyChanged("StoreID");
                this.OnStoreIDChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging( )
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged( String propertyName )
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}

[global::System.Data.Linq.Mapping.TableAttribute(Name = "dbo.VPaymentMode")]
public partial class VPaymentMode : INotifyPropertyChanging, INotifyPropertyChanged
{

    private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);

    private int _ID;

    private int _VoyBillId;

    private string _PaymentMode;

    private string _PaymentValue;

    private string _Notes;

    #region Extensibility Method Definitions
    partial void OnLoaded( );
    partial void OnValidate( System.Data.Linq.ChangeAction action );
    partial void OnCreated( );
    partial void OnIDChanging( int value );
    partial void OnIDChanged( );
    partial void OnVoyBillIdChanging( int value );
    partial void OnVoyBillIdChanged( );
    partial void OnPaymentModeChanging( string value );
    partial void OnPaymentModeChanged( );
    partial void OnPaymentValueChanging( string value );
    partial void OnPaymentValueChanged( );
    partial void OnNotesChanging( string value );
    partial void OnNotesChanged( );
    #endregion


    #region ForigenKey
    private EntityRef<VoyBill> _VoyBill;
    [Association(Storage = "_VoyBill", ThisKey = "VoyBillId")]
    public VoyBill VoyBill
    {
        get { return this._VoyBill.Entity; }
        set { this._VoyBill.Entity = value; }
    }
    public VPaymentMode( )
    {
        this._VoyBill = new EntityRef<VoyBill>();
        OnCreated();
    }
    #endregion ForigenKey


    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_ID", AutoSync = AutoSync.OnInsert, DbType = "Int NOT NULL IDENTITY", IsPrimaryKey = true, IsDbGenerated = true)]
    public int ID
    {
        get
        {
            return this._ID;
        }
        set
        {
            if ((this._ID != value))
            {
                this.OnIDChanging(value);
                this.SendPropertyChanging();
                this._ID = value;
                this.SendPropertyChanged("ID");
                this.OnIDChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_VoyBillId", DbType = "Int NOT NULL")]
    public int VoyBillId
    {
        get
        {
            return this._VoyBillId;
        }
        set
        {
            if ((this._VoyBillId != value))
            {
                this.OnVoyBillIdChanging(value);
                this.SendPropertyChanging();
                this._VoyBillId = value;
                this.SendPropertyChanged("VoyBillId");
                this.OnVoyBillIdChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentMode", DbType = "NVarChar(4000)")]
    public string PaymentMode
    {
        get
        {
            return this._PaymentMode;
        }
        set
        {
            if ((this._PaymentMode != value))
            {
                this.OnPaymentModeChanging(value);
                this.SendPropertyChanging();
                this._PaymentMode = value;
                this.SendPropertyChanged("PaymentMode");
                this.OnPaymentModeChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_PaymentValue", DbType = "NVarChar(4000)")]
    public string PaymentValue
    {
        get
        {
            return this._PaymentValue;
        }
        set
        {
            if ((this._PaymentValue != value))
            {
                this.OnPaymentValueChanging(value);
                this.SendPropertyChanging();
                this._PaymentValue = value;
                this.SendPropertyChanged("PaymentValue");
                this.OnPaymentValueChanged();
            }
        }
    }

    [global::System.Data.Linq.Mapping.ColumnAttribute(Storage = "_Notes", DbType = "NVarChar(4000)")]
    public string Notes
    {
        get
        {
            return this._Notes;
        }
        set
        {
            if ((this._Notes != value))
            {
                this.OnNotesChanging(value);
                this.SendPropertyChanging();
                this._Notes = value;
                this.SendPropertyChanged("Notes");
                this.OnNotesChanged();
            }
        }
    }

    public event PropertyChangingEventHandler PropertyChanging;

    public event PropertyChangedEventHandler PropertyChanged;

    protected virtual void SendPropertyChanging( )
    {
        if ((this.PropertyChanging != null))
        {
            this.PropertyChanging(this, emptyChangingEventArgs);
        }
    }

    protected virtual void SendPropertyChanged( String propertyName )
    {
        if ((this.PropertyChanged != null))
        {
            this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
#pragma warning restore 1591

